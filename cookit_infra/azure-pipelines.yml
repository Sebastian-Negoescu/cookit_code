trigger:
- dev

variables:
  subscription: "http://AzDevOps"
  branch: "dev"

stages:
  - stage: "Test_Agent_connectivity"
    pool: "Default"
    displayName: "Testing Agent Connectivity"
    jobs:
      - job: "Clean_Workspace"
        workspace:
          clean: all
      - job: "EchoAgent_DummyText"
        displayName: "Echo Agent - Dummy Text"
        steps:
        - bash: |
            which bash
            echo "Agent Name & ID: $AGENT_NAME : $AGENT_ID."
            echo "Current working directory: $SYSTEM_DEFAULTWORKINGDIRECTORY"
            echo "Current Build Sources directory: $BUILD_SOURCESDIRECTORY"
          displayName: "Ping"
          continueOnError: true
      - job: "Assert_Connectivity"
        dependsOn: "EchoAgent_DummyText"
        condition: succeeded()
        displayName: "Assert Connectivity with the Agent"
        steps:
        - task: Bash@3
          displayName: "Assert 'PING'"
          inputs:
            targetType: inline
            script: "echo 'Connectivity: SUCCESSFULL; continue the pipeline...'"
      - job: "Check_FileTree"
        dependsOn: "Assert_Connectivity"
        condition: succeeded()
        displayName: "Check the structure of the repo"
        steps:
        - task: PowerShell@2
          displayName: "Filetree listing"
          inputs:
            targetType: inline
            script: "Get-Location && Get-ChildItem -Recurse"

  - stage: "Create_Infrastructure"
    dependsOn: "Test_Agent_Connectivity"
    condition: succeeded()
    pool: "Default"
    displayName: "Create Azure Infrastructure"
    jobs:
      - job: "Create_RG"
        displayName: "Create Resource Group"
        steps:
        - task: PowerShell@2
          name: "Set_Facts"
          displayName: "Set Facts - register Vars"
          inputs:
            targetType: inline
            script: |
              $masterFile = (Get-ChildItem -Recurse -Filter "master.json" | Select-Object FullName).FullName
              Write-Host "Found Master File at: $($masterFile)."
              $masterContent = Get-Content $masterFile | ConvertFrom-JSON
              $prefix = $masterContent.parameters.prefix.defaultValue
              $rgName = $prefix + "_rg"
        
